# >>>>>>>>>>>>>>>>>>>>>>>>>>>
# Auto-generated by agi-pack.
FROM nvidia/cuda:11.8.0-base-ubuntu22.04 AS base-gpu

# Setup environment variables
ENV AGIPACK_PROJECT agi
ENV AGIPACK_PYENV agi-py38
ENV AGIPACK_VERSION 0.1.8
ENV AGIPACK_PATH /opt/agi-pack

ENV PYTHON_VERSION 3.8
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1
ENV PYTHONWARNINGS ignore

# Setup conda paths
ENV CONDA_PATH=/opt/conda/envs/${AGIPACK_PYENV}
ENV CONDA_PREFIX=${CONDA_PATH}
ENV CONDA_EXE=${CONDA_PATH}/bin/conda
ENV PATH=${CONDA_PATH}/bin:/opt/conda/bin:$PATH
ENV CONDA_DEFAULT_ENV ${AGIPACK_PYENV}

# Setup environment variables
ENV MY_ENV_VAR=value 


# Install system packages
RUN apt-get -y update \
    && apt-get -y --no-install-recommends install \
    curl bzip2 git ca-certificates \
    wget \
    && apt-get -y autoclean \
    && apt-get -y autoremove \
    && rm -rf /var/lib/apt/lists/*

# Install mambaforge
RUN curl -sLo ~/mambaforge.sh "https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-$(uname)-$(uname -m).sh" \
  && chmod +x ~/mambaforge.sh \
  && ~/mambaforge.sh -b -p /opt/conda \
  && /opt/conda/bin/mamba init bash \
  && /opt/conda/bin/mamba config --add channels conda-forge \
  && /opt/conda/bin/mamba create -n ${AGIPACK_PYENV} python=${PYTHON_VERSION} -y \
  && rm ~/mambaforge.sh

# Upgrade pip
RUN pip install --upgrade pip

# Install conda packages, with cache mounting /opt/conda/pkgs for faster builds
# Note: Cache mounts allow us to re-use the cache for conda packages
# instead of having to re-download them every time we build.
RUN --mount=type=cache,target=/opt/conda/pkgs/ \
    mamba install -yv \
    pytorch==2.1.0 \
    torchvision \
    torchaudio \
    pytorch-cuda=11.8 \
    cudatoolkit=11.8 \
    cudnn=8.2.1 \
    -c pytorch -c nvidia \
    && echo "conda/mamba install complete"

# Install pip requirements, with cache mounting ~/.cache/pip for faster builds
# Note: Cache mounts allow us to re-use the cache for pip packages
# instead of having to re-download them every time we build.
COPY requirements/requirements.txt /tmp/reqs/requirements/requirements.txt
RUN --mount=type=cache,target=~/.cache/pip \
    pip install --upgrade pip \
    && pip install -r /tmp/reqs/requirements/requirements.txt \
    && echo "pip requirements install complete"

# Export conda environment on login
RUN echo "export CONDA_PATH=/opt/conda/envs/${AGIPACK_PYENV}" >> ~/.bashrc \
    && echo "export PATH=/opt/conda/envs/${AGIPACK_PYENV}/bin:$PATH" >> ~/.bashrc \
    && echo "export CONDA_DEFAULT_ENV=${AGIPACK_PYENV}" >> ~/.bashrc \
    && echo "mamba activate ${AGIPACK_PYENV}" > ~/.bashrc
RUN /opt/conda/bin/mamba clean -ya \
    && rm -rf ~/.cache/pip \
    && rm -rf /opt/conda/pkgs/* \
    && rm -rf /tmp/reqs \
    && echo "pip cleanup complete"

# Setup working directory
WORKDIR /app/$AGIPACK_PYENV

# Run commands
RUN \
    echo 'pytorch: ' && python -c 'import torch; print(torch.__version__)' \
    echo 'cuda: ' && python -c 'import torch; print(torch.version.cuda)' \
    echo 'cudnn: ' && python -c 'import torch; print(torch.backends.cudnn.version())' \
    echo 'opencv:' && python -c 'import cv2; print(cv2.__version__)' \
    && echo "run commands complete"
CMD ["bash"]